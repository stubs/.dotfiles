#!/usr/bin/env bash

# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$@"
}

# Open man page as PDF
function manpdf() {
    man -t "${1}" | open -f -a /Applications/Preview.app/
}

if [[ $USER = 'agonzalez' ]]; then
    function scpt() {
        scp "${1}" taskmaster1:/home/dpuser/agonzalez/
    }
    function scpt2() {
        scp "${1}" taskmaster2:/home/agonzalez/
    }
fi

parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ [\1]/'
}

quick_tox() {
    # Quick checkout of dev branch, and validate with tox for checking team members' PRs.

    # accept user cli arg of branch to checkout, save current branch to return to when done
    branch="${1}"
    prev_branch="$(git rev-parse --abbrev-ref HEAD)"

    # stash changes before checkout?
    if [[ -z $(git status -s) ]]; then
        git checkout "$branch"
        git pull

        # run tox on new branch
        if [[ -f "$(git rev-parse --show-toplevel)/tox.ini" ]]; then
            tox
        fi

        # checkout previous branch
        git checkout "$prev_branch"
        unset branch
        unset prev_branch
    else
        echo "You have uncommitted changes.  Please stash or commit before quick_tox run."
        return 1
    fi
}

# ripgrep->fzf->neovim [QUERY]
rfv() (
  RELOAD='reload:rg -. --column --color=always --smart-case --glob '!**/.git/' {q} || :'
  OPENER='if [[ $FZF_SELECT_COUNT -eq 0 ]]; then
            $EDITOR {1} +{2}     # No selection. Open the current line in NeoVim.
          else
            $EDITOR +cw -q {+f}  # Build quickfix list for the selected items.
          fi'
  fzf --disabled --ansi --multi \
      --bind "start:$RELOAD" --bind "change:$RELOAD" \
      --bind "enter:become:$OPENER" \
      --bind "ctrl-o:execute:$OPENER" \
      --bind 'alt-a:select-all,alt-d:deselect-all,ctrl-/:toggle-preview' \
      --delimiter : \
      --preview 'bat --style=full --color=always --highlight-line {2} {1}' \
      --preview-window '~4,+{2}+4/3,<80(up)' \
      --query "$*"
)
